
一、开发思路：
股票信息生成器：包含三个部分：
1、前端界面展示，搭建一个javaweb服程序
2、前端与后端页面交互，通过websocket实现动态数据显示
3、使用java Disruptor并发框架来发布股票交易信息

二、技术分析

1、javaweb服务采用eclipse创建一个java web服务，使用maven进行包的管理，使用git源代码管理，运行需要部署到tomcat上进行。
2、前后端通信这里采用websocket通信，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息,这样保障数据实时性。
3、Disruptor封装stock信息，通过一个for循环不停模拟股票交易数据。

三、运行说明
1、前提条件
安装jdk 1.8,并配置好环境变量
安装tomcat，开发过程中测试使用的是apache-tomcat-8.0.43
2、运行配置
 项目使用maven打包war包，正常路径是stock-demo/target/stock-demo.war，这里已经将起打包好
 将打包好的war包，拷贝到apache-tomcat-8.0.43/webapps 目录下面
 启动tomcat：进入apache-tomcat-8.0.43路劲 mac环境下启动命令为 ：sh bin/startup.sh
 启动浏览器输入：http://localhost:8080/stock-demo/
 
 四、结果说明：
 界面模拟的是上证指数结果，数据是由Disruptor并发框架不断产生数据，通过websocket直接展示到界面，这里实现了一个实时刷新的曲线图。
 实时刷新的曲线图的数据都是来自于后台Disruptor方式产生的，并不是前端js自动生成。
 
 
 五、总结
 这里仅仅模拟了一个大盘的走势，应该算是一个小型的MVP，相关股票的订阅与推荐还可以完善起来。
 第一次尝试实现websocket 、第一次尝试使用动态图标实现实时刷新、第一次尝试使用Disruptor并发框架。挺有意思的过程。
 
 
